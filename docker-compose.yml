version: '3.9'

services:
  db:
    image: postgres:15
    container_name: db
    restart: unless-stopped
    environment:
      POSTGRES_USER: mcp_user
      POSTGRES_PASSWORD: mcp_password
      POSTGRES_DB: medical_db
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./db/01_init.sql:/docker-entrypoint-initdb.d/01_init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mcp_user -d medical_db"]
      interval: 5s
      timeout: 3s
      retries: 30

  mcp:
    image: ghcr.io/your-org/medical-mcp-toolkit:latest # replace with real image or build context
    container_name: mcp
    restart: unless-stopped
    environment:
      MCP_BEARER_TOKEN: dev-token
    ports:
      - "${MCP_PORT:-9090}:9090"
    depends_on:
      db:
        condition: service_healthy

  gateway:
    build:
      context: ./gateway
    container_name: gateway
    restart: unless-stopped
    environment:
      DATABASE_URL: postgresql://mcp_user:mcp_password@db:5432/medical_db
      ALLOWED_ORIGINS: http://localhost:3000
      ALLOW_CREDENTIALS: "true"
      SESSION_COOKIE_NAME: sid
      SESSION_TTL_SECONDS: 2592000
      SESSION_SECURE_COOKIES: "false"
      SESSION_SAMESITE: lax
      COOKIE_SECRET: change-me-please-32B-minimum
      MCP_BASE_URL: http://mcp:9090
      MCP_BEARER_TOKEN: dev-token
    ports:
      - "${GATEWAY_PORT:-8080}:8080"
    depends_on:
      db:
        condition: service_healthy
      mcp:
        condition: service_started

  frontend:
    build:
      context: ./frontend
    container_name: frontend
    restart: unless-stopped
    environment:
      NEXT_PUBLIC_API_BASE: http://localhost:${GATEWAY_PORT:-8080}
      NEXT_PUBLIC_APP_NAME: Medical AI Portal
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    depends_on:
      gateway:
        condition: service_started

volumes:
  db_data:
